name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
      - 'release/**'
    # Review gh actions docs if you want to further define triggers, paths, etc
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build website
        run: yarn build

      # Popular action to deploy to GitHub Pages:
      # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Build output to publish to the `gh-pages` branch:
          publish_dir: ./build
          # The following lines assign commit authorship to the official
          # GH-Actions bot for deploys to `gh-pages` branch:
          # https://github.com/actions/checkout/issues/13#issuecomment-724415212
          # The GH actions bot is used by default if you didn't specify the two fields.
          # You can swap them out with your own user credentials.
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
          


  release-chart:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Get latest tag
        run: |
          TAG=$(git fetch --tags && git tag --sort=-v:refname | grep -E '^kubeskoop-exporter-' | head -n 1)
          if [[ -n "$TAG" ]]; then
            PREFIX="kubeskoop-exporter-"
            VERSION=${TAG#$PREFIX}
            echo "latest tag:$TAG,version:$VERSION"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "没有找到符合要求的tag"
          fi

      - uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
         tag_name: ${{ env.VERSION }}
         github_token: ${{ secrets.GITHUB_TOKEN }}
         delete_release: true #(optional) default: true 

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_SKIP_EXISTING: true
   
