config:
  metricProbes:
    - name: conntrack
    - name: qdisc
    - name: netdev
    - name: io
    - name: sock
    - name: tcpsummary
    - name: tcp
    - name: tcpext
    - name: udp
    - name: kernellatency
    - name: packetloss
    - name: flow
      args:
        enablePortInLabel: false
    - name: tcpretrans
  eventProbes:
    - name: tcpreset
    - name: packetloss
      args:
        enableStack: false
    - name: tcpretrans
  eventSinks:
    - name: stderr

agent:
  config:
    debug: false
    port: 9102
    runtimeEndpoint: /run/containerd/containerd.sock
  image:
    repository: kubeskoop/agent
    tag: v1.0.0-rc.1
    imagePullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 500m
      memory: 1024Mi
  btfhack:
    enabled: true
    repository: kubeskoop/agent
    tag: v1.0.0-rc.1
    imagePullPolicy: IfNotPresent
  nodeSelector: {}
  tolerations: {}

controller:
  enabled: true
  config:
    logLevel: info
    prometheusEndpoint: ''
    lokiEndpoint: ''
  image:
    repository: kubeskoop/controller
    tag: v1.0.0-rc.1
    imagePullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 500m
      memory: 200Mi
    requests:
      cpu: 50m
      memory: 20Mi
  nodeSelector: {}
  tolerations: {}

webconsole:
  enabled: true
  service:
    type: NodePort
    port: 80
    annotations: {}
  auth:
    username: admin
    password: kubeskoop
  grafana:
    endpoint: http://grafana/grafana
    proxy: true
    # used for proxy mode
    username: admin
    password: kubeskoop
  image:
    repository: kubeskoop/controller
    tag: v1.0.0
    imagePullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 500m
      memory: 200Mi
    requests:
      cpu: 50m
      memory: 20Mi
  nodeSelector: { }
  tolerations: { }
